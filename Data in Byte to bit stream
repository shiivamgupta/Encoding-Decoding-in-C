#include <iostream>
using namespace std;

void bytetobitconv(unsigned char* str, int size);

int main()
{
    cout<<"enter the data in bytes \n";
    unsigned char *str;
    int count = 0;
    //assignment of str pointer to a memory location in heap
    str = (unsigned char *)malloc(sizeof(unsigned char)*(count+10));
    char val = '\0';
    //loop until we receive NULL char from user
    while(val!='\n'){
        val = getchar();
        str[count++] = val;
        //following CODE is for **Dynamic allocation of heap memory**
        //to allocate memory to the str and resize the heap memory
        if(count==sizeof(str)/sizeof(char) - 1){
            unsigned char *temp_str;
            temp_str = str;
           
            str = (unsigned char *)malloc(sizeof(unsigned char)*(count+11));
            for(int i=0;i<count+1;i++){
                str[i] = temp_str[i];
            }
        }
    }
    //filling the last char of the byte stream to NULL
    str[count] = '\0';
    cout<<"data length is: "<<count-1<<" bytes\n";
    cout<<"single byte contains: "<<8*sizeof(char)<<" bits\n";
    //byte data is converted to the binary or bit format
    bytetobitconv(str,count-1);
    return 0;
}

void bytetobitconv(unsigned char *byt,int size){
    int bit_size = sizeof(byt)*8*sizeof(unsigned char);
    unsigned char* bits = (unsigned char*)malloc(sizeof(char)*bit_size);
   
    //filling the bits array
    for(int i=0;i<bit_size;i++){
        //comparing the byte and doing the bit maipulation to
        //attain the single bit and fill the bits array accordingly
        bits[i] = ((1<<(i%8))&(byt[i/8]))>>(i%8);
        //comparing each character of the bits array
        if(bits[i]==' '||bits[i]=='\0')
            bits[i]='0';
        else
            bits[i]='1';
    }
    //printing the bits of the array
    cout<<"\nprinting the bit stream little endian format\n";
    for(int i=bit_size;i>=0;i--){
        //depends on the compilers little endian or big-endian
        if((i+1)%8==0)
            cout<<" \n\t";
        cout<<bits[i];
    }
    cout<<"\n";
}
